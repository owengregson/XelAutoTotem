name: Java CI with Gradle

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Needed for creating releases

    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Ensure full history is fetched to capture all commits

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Extract current version from gradle.properties
      id: get_version
      run: |
        version=$(grep -oP '(?<=mod_version = ).*' gradle.properties)
        echo "mod_version=$version" >> $GITHUB_ENV

    - name: Get date of last release (including pre-releases)
      id: get_last_release_date
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        last_release_date=$(curl -s -H "Authorization: token $GH_TOKEN" \
          https://api.github.com/repos/${{ github.repository }}/releases \
          | jq -r 'map(select(.prerelease or .draft == false)) | sort_by(.created_at) | last | .created_at')

        if [ "$last_release_date" = "null" ] || [ -z "$last_release_date" ]; then
          echo "No previous release found. Including all commits."
          last_release_date="1970-01-01T00:00:00Z"
        else
          echo "Last release date: $last_release_date"
        fi

        echo "last_release_date=$last_release_date" >> $GITHUB_ENV

    - name: Check if there are new commits since last release
      id: check_new_commits
      run: |
        commits_since_last_release=$(git log --since="${{ env.last_release_date }}" --oneline)
        if [ -z "$commits_since_last_release" ]; then
          echo "No new commits since last release. Skipping build and release."
          echo "build_required=false" >> $GITHUB_ENV
        else
          echo "New commits detected since last release."
          echo "build_required=true" >> $GITHUB_ENV

    - name: Build with Gradle
      if: env.build_required == 'true'
      run: ./gradlew build --no-daemon

    - name: Generate Changelog
      if: env.build_required == 'true'
      id: generate_changelog
      run: |
        changelog=$(git log --since="${{ env.last_release_date }}" --pretty=format:"- %h - %s")
        echo "changelog<<EOF" >> $GITHUB_ENV
        echo "$changelog" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Create GitHub Release and Upload Assets
      if: env.build_required == 'true'
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ env.mod_version }}
        name: Release ${{ env.mod_version }}
        body: |
          ## Release v${{ env.mod_version }}

          ### Changelog:
          ${{ env.changelog }}
        draft: false
        prerelease: false
        artifacts: |
          ./build/libs/XAT-${{ env.mod_version }}.jar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
